// @ts-check

/**
 * @Author likan
 * @Date 2022/8/17 17:32:45
 * @Filepath likan/.eslintrc.js
 */

/** @typedef {import('eslint').Linter.BaseConfig} EslintConfig */
/** @typedef {import('eslint').Linter.Config} Config */

/** @type {EslintConfig & Config} */
module.exports = {
  env: {
    es2021: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:typescript-sort-keys/recommended',
    'plugin:unicorn/recommended',
  ],
  globals: {
    vscode: 'readonly',
    Configuration: 'readonly',
    fetch: 'readonly',
  },
  overrides: [],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  plugins: ['simple-import-sort', 'sort-keys-fix'],
  root: true,
  rules: {
    '@typescript-eslint/ban-ts-comment': 'off',
    'array-bracket-spacing': ['error', 'always'],
    'arrow-body-style': 'error',
    'arrow-parens': ['error', 'as-needed'],
    'arrow-spacing': 'error',
    'block-spacing': ['error', 'always'],
    'brace-style': ['error'],
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['error', { after: true }],
    'comma-style': ['error', 'last'],
    curly: ['error', 'multi'],
    'default-case': 'error',
    'dot-location': ['error', 'property'],
    'dot-notation': 'error',
    'eol-last': 'error',
    eqeqeq: 'error',
    'func-call-spacing': 'error',
    'func-names': ['error', 'as-needed'],
    'function-paren-newline': 'error',
    'generator-star-spacing': 'error',
    // 'no-magic-numbers': 'error',
    'implicit-arrow-linebreak': 'error',
    indent: ['warn', 2, { SwitchCase: 1, flatTernaryExpressions: true }],
    'jsx-quotes': ['error', 'prefer-single'],
    'key-spacing': ['error', { mode: 'strict' }],
    'keyword-spacing': 'error',
    'line-comment-position': 'error',
    'linebreak-style': ['warn', 'windows'],
    'lines-around-comment': ['error', { beforeBlockComment: true }],
    'lines-between-class-members': 'error',
    'max-depth': ['error', 4],
    'multiline-comment-style': 'error',
    'new-cap': 'error',
    'new-parens': 'error',
    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 4 }],
    'no-confusing-arrow': 'error',
    'no-duplicate-imports': 'error',
    'no-eq-null': 'error',
    'no-floating-decimal': 'error',
    'no-inline-comments': 'error',
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-multi-spaces': ['error', { ignoreEOLComments: true }],
    'no-multiple-empty-lines': ['error', { max: 1, maxBOF: 1, maxEOF: 0 }],
    'no-restricted-imports': ['error', 'vscode'],
    'no-return-await': 'error',
    'no-trailing-spaces': ['error', { ignoreComments: true }],
    'no-unneeded-ternary': 'error',
    'no-unused-expressions': 'warn',
    'no-useless-escape': 'warn',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-whitespace-before-property': 'error',
    'object-curly-spacing': ['error', 'always'],
    'object-shorthand': ['error'],
    'operator-assignment': 'error',
    'operator-linebreak': 'error',
    'padded-blocks': ['error', 'never'],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', next: 'return', prev: '*' },
      { blankLine: 'always', next: '*', prev: ['const', 'let', 'var'] },
      { blankLine: 'any', next: ['const', 'let', 'var'], prev: ['const', 'let', 'var'] },
      { blankLine: 'always', next: '*', prev: 'directive' },
      { blankLine: 'any', next: 'directive', prev: 'directive' },
    ],
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'consistent'],
    quotes: ['warn', 'single', { avoidEscape: true }],
    'require-await': 'error',
    semi: ['warn', 'always'],
    'semi-spacing': 'error',
    'semi-style': 'error',
    'simple-import-sort/exports': 'error',
    'simple-import-sort/imports': 'error',
    'sort-keys-fix/sort-keys-fix': 'error',
    'sort-vars': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': 'error',
    'space-in-parens': 'error',
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': ['error', 'always'],
    'template-tag-spacing': 'error',
    'unicorn/filename-case': ['error', { cases: { kebabCase: true, pascalCase: true } }],
    'unicorn/no-nested-ternary': 'off',
    'unicorn/no-unsafe-regex': 'error',
    'unicorn/no-unused-properties': 'error',
    'unicorn/prefer-at': 'error',
    'unicorn/prefer-json-parse-buffer': 'error',
    'unicorn/prefer-string-replace-all': 'error',
    'wrap-iife': ['error', 'inside'],
    yoda: 'error',
    'unicorn/prefer-top-level-await': 'off',
  },
  settings: {},
  ignorePatterns: ['*.js', 'lib'],
};
